{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo List API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Gets a single User by email address",
        "operationId": "getByEmail",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new User",
        "operationId": "createUser",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a newly created User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Updates a User",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a User",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, User has been deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "summary": "Gets all Todos for a TodoList",
        "operationId": "getByListId",
        "tags": ["Todos"],
        "parameters": [
          {
            "name": "listId",
            "description": "Todo List uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of Todos for the given TodoList uid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Todo",
        "operationId": "createTodo",
        "tags": ["Todos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created Todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "summary": "Updates a Todo",
        "operationId": "updateTodo",
        "tags": ["Todos"],
        "parameters": [
          {
            "$ref": "#/components/parameters/todoId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated Todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a Todo",
        "operationId": "deleteTodo",
        "tags": ["Todos"],
        "parameters": [
          {
            "$ref": "#/components/parameters/todoId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, Todo has been deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todoLists": {
      "get": {
        "summary": "Gets all TodoLists for a User",
        "operationId": "getByUserId",
        "tags": ["TodoLists"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of TodoLists for the given User uid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new TodoList",
        "operationId": "createTodoList",
        "tags": ["TodoLists"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created TodoList",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todoLists/{id}": {
      "get": {
        "summary": "Gets a Todo List by id",
        "operationId": "getTodoListById",
        "tags": ["TodoLists"],
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a TodoList",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a TodoList",
        "operationId": "updateTodoList",
        "tags": ["TodoLists"],
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated TodoList",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a TodoList",
        "operationId": "deleteTodoList",
        "tags": ["TodoLists"],
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, TodoList has been deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "email"],
        "properties": {
          "id": {
            "type": "string",
            "example": "2b6f62ed-5649-4218-a2fe-f692e5071112"
          },
          "email": {
            "type": "string",
            "example": "tony.stank@stark.industries.com"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "TodoList": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "example": "2b6f62ed-5649-4218-a2fe-f692e5071666"
          },
          "name": {
            "type": "string",
            "example": "Daily Todos"
          },
          "todos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Todo",
              "example": [
                {
                  "id": 12345,
                  "title": "Finish the API spec",
                  "isComplete": false
                },
                {
                  "id": 98765,
                  "title": "Take out the trash",
                  "isComplete": true
                }
              ]
            }
          },
          "users": {
            "type": "array",
            "description": "List of Users with access to the TodoList",
            "items": {
              "$ref": "#/components/schemas/User",
              "example": [
                {
                  "id": 234234,
                  "email": "tony.stank@stark.industries.com"
                },
                {
                  "id": 9823749,
                  "email": "steve.rogers@avengers.assemble.com"
                }
              ]
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Todo": {
        "type": "object",
        "required": ["id", "listId"],
        "properties": {
          "id": {
            "type": "string",
            "example": "2b6f62ed-5649-4218-a2fe-f692e5071789"
          },
          "isComplete": {
            "type": "boolean",
            "example": true
          },
          "title": {
            "type": "string",
            "example": "Take out the trash"
          },
          "listId": {
            "type": "string",
            "description": "The id of the TodoList the Todo belongs to"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Error Response",
        "properties": {
          "code": {
            "type": "number",
            "description": "error code, http status",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Bad Request"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Malformed body",
              "description": "Details about the error"
            }
          }
        },
        "required": ["code", "message", "details"]
      },
      "UserRequest": {
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "tony.stank@stank.industries.com"
          }
        }
      },
      "CreateTodo": {
        "description": "Does this need a description? Where will this show up.",
        "required": ["listId"],
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "example": "uid here"
          },
          "title": {
            "type": "string",
            "example": "Finish the API spec"
          }
        }
      },
      "UpdateTodo": {
        "description": "Update Todo Request",
        "required": ["listId"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Finish the API spec"
          },
          "isComplete": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateTodoList": {
        "description": "Create TodoList request",
        "type": "object",
        "required": ["userId"],
        "properties": {
          "name": {
            "type": "string",
            "example": "New Todo List"
          },
          "userId": {
            "type": "string",
            "example": "uid here"
          }
        }
      },
      "UpdateTodoList": {
        "description": "Update TodoList request",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Todo List name"
          }
        }
      }
    },
    "parameters": {
      "userId": {
        "name": "id",
        "in": "path",
        "description": "User uid",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "todoId": {
        "name": "id",
        "in": "path",
        "description": "Todo uid",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "listId": {
        "name": "id",
        "in": "path",
        "description": "Todo List uid",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "MutateUsers": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "tony.stank@stank.industries.com"
                }
              }
            }
          }
        }
      },
      "CreateTodo": {
        "required": true,
        "description": "Does this need a description? Where will this show up",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["listId"],
              "properties": {
                "listId": {
                  "type": "string",
                  "example": "uid here"
                },
                "title": {
                  "type": "string",
                  "example": "Finish the API spec"
                }
              }
            }
          }
        }
      },
      "UpdateTodo": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Finish the API spec"
                },
                "isComplete": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "UpdateTodoList": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Todo List name"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Failed request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    }
  }
}
